{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","reduce","arrayAchatado","array","concat","catch","Error","erro","resolve","reject","get","map","Date","obj","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService{\n    \n    constructor(){\n    \n        this._http = new HttpService();\n    }\n    \n    obterNegociacoes(){\n        \n        return Promise\n            .all([\n                this.obterNegociacoesDaSemana(),\n                this.obterNegociacoesDaSemanaAnterior(),\n                this.obterNegociacoesDaSemanaRetrasada()\n            ])\n            .then(negociacoes => \n                  negociacoes\n                    .reduce((arrayAchatado, array) => arrayAchatado.concat(array), []))\n            .catch(erro => {\n                throw new Error(erro);\n            });\n    }\n    \n    obterNegociacoesDaSemana(){\n        \n        return new Promise((resolve, reject) => {\n            \n            this._http\n                .get('negociacoes/semana')\n                .then(negociacoes => \n                    resolve(negociacoes.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor))))\n                .catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana');\n                });\n        });\n    }\n    \n    obterNegociacoesDaSemanaAnterior(){\n        \n        return new Promise((resolve, reject) => {\n            \n            this._http\n                .get('negociacoes/anterior')\n                .then(negociacoes => \n                    resolve(negociacoes.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor))))\n                .catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana anterior');\n                });\n        });\n        \n    }\n    \n    obterNegociacoesDaSemanaRetrasada(){\n        \n        return new Promise((resolve, reject) => {\n            \n            this._http\n                .get('negociacoes/retrasada')\n                .then(negociacoes => \n                    resolve(negociacoes.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor))))\n                .catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana retrasada');\n                });\n        });\n    }\n\n    cadastra(negociacao){\n\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => 'Negociação adicionada com sucesso.')\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possivel adicionar a negociacao');\n            });\n    }\n\n    lista(){\n\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.listaTodos())\n            .catch(erro => {\n\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações.');\n            })\n    }\n\n    apaga(){\n\n       return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .then(() => 'Negociacoes apagadas com sucesso.')\n            .catch(erro => {\n\n                console.log(erro);\n                throw new Error('\u001cNão foi possivel apagar as negociacoes');\n            });\n    }\n\n    importa(listaAtual){\n\n        return this.obterNegociacoes()\n            .then(negociacoes => negociacoes.filter(negociacao =>\n                !listaAtual.some(negociacaoExistente =>\n                    negociacao.isEquals(negociacaoExistente)))\n            )\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociacões.');\n            });\n    }\n}"]}